group 'ch.so.agi'
version '1.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

apply plugin: 'java'

apply plugin: 'maven'
apply plugin: 'maven-publish'
//apply plugin: 'findbugs'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.1.3'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    compile group: 'org.apache.derby', name: 'derby', version: '10.13.1.1'
    // Additional driver possibilities when the need arises:
    // - oracle jdbc driver
    // - sqlserver jdbc driver (Microsoft)
    compile gradleApi()
}

sourceCompatibility = 1.8

setNonExistingPropertyToUndefinedValue('gretlRepoName')
setNonExistingPropertyToUndefinedValue('gretlRepoUrl')
setNonExistingPropertyToUndefinedValue('gretlRepoWriterName')
setNonExistingPropertyToUndefinedValue('gretlRepoWriterPass')

publishing{
    publications{
        mavenJava(MavenPublication){
            from components.java
        }
    }
    repositories{
        maven{
            name gretlRepoName
            url gretlRepoUrl
            credentials {
                username gretlRepoWriterName
                password gretlRepoWriterPass
            }
        }
    }
}

def setNonExistingPropertyToUndefinedValue(propertyName){
    setNonExistingPropertyToDefaultValue(propertyName, 'UNDEFINED')
}

def setNonExistingPropertyToDefaultValue(propertyName, defaultValue) {
    if (!project.hasProperty(propertyName)) {
        ext[propertyName] = defaultValue
    }
}

/*
tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}
*/

