ext {
    jarDir = "$projectDir/../build/libs"
}
apply from: '../dependencies.gradle'

allprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }
}

sourceSets {
    testIntegration {
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
    }

    testSystem {
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
    }
}

dependencies{
    compile junitDependency
    runtime postgresqlDependency
    testSystemCompile junitDependency
    testIntegrationCompile junitDependency
}

task testIntegration(type: Test) {
    group = 'Verification'
    description = 'Runs integration tests'

    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
}

task testSystem(type: Test) {
    group = 'Verification'
    description = 'Runs system tests including Jenkins'

    testClassesDirs = sourceSets.testSystem.output.classesDirs
    classpath = sourceSets.testSystem.runtimeClasspath
}

// Transfer the required configuration variables to the unit test code.
// (The test code has no access to the -D or -P variables as it is executed in a separate jvm-process)
tasks.withType(Test) {
    def GRETLTEST_DBURI = 'gretltest_dburi'
    systemProperty(GRETLTEST_DBURI ,(findProperty(GRETLTEST_DBURI) != null) ? findProperty(GRETLTEST_DBURI) : 'jdbc:postgresql://localhost:5432/gretl')

    println 'dburi: ' + getSystemProperties().getAt(GRETLTEST_DBURI)
}

subprojects {

    buildscript {
        repositories {
            maven {
                url "http://download.osgeo.org/webdav/geotools/"
            }
            mavenCentral()
            maven {
                url "http://jars.interlis.ch"
            }
            maven {
                url "http://jars.umleditor.org"
            }
        }

        configurations.all {
            resolutionStrategy {
                force ioxIliDependency
            }
        }

        dependencies {
            classpath fileTree(dir: rootProject.ext.jarDir, include: '*.jar')

            classpath ilivalidatorDependency
            classpath ili2pgDependency
            classpath ioxWkfDependency
            classpath ioxIliDependency
        }
    }
}
